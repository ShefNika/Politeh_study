.def TMP = R20 ; переименование регистра
.org $000 ; начальный адрес в памяти
 JMP reset ; Указатель на начало программы
; Функция паузы
delay:
LDI R30, 200; y
LDI R29, 153; x
NOP
NOP
NOP
delay_sub:
NOP
DEC R29
NOP
BRNE delay_sub ; переход в начало цикла, если R29 неравно 0 (пока флаг Z = 0)
INC R30
BRNE delay_sub ; переход в начало цикла, если R30 неравно 0
RET
; Начальная настройка
reset:
; настройка исходных значений
 LDI TMP, 0x01
 MOV R0, TMP ; R0 = 0x01
 CLR TMP ; обнуляем все биты TMP
 MOV R1, TMP ; R1 = 0x00
 MOV R2, TMP ; R2 = 0x00
 MOV R3, TMP ; R3 = 0x00
; настройка портов ввода-вывода
 SER TMP ; 0xFF (установка в  1 всех бит TMP)
 OUT DDRA, TMP ; Вывод (режим порта А)
 OUT DDRB, TMP ; Вывод
 OUT DDRC, TMP ; Вывод
 OUT DDRD, TMP ; Вывод
; Установка вершины стека в конец ОЗУ
 LDI TMP, HIGH(RAMEND) ; Старшие разряды адреса
 OUT SPH, TMP ; Установка старшего байта указателя стека
 LDI TMP, LOW(RAMEND) ; Младшие разряды адреса
 OUT SPL, TMP ;Установка младшего байта указателя стека
; Основной цикл
loop:
; Циклический сдвиг 32-разрядного числа R0-R3
 BST R0, 0 ; сохранение младшего бита во флаге Т
 LSR R3 ; логический сдвиг вправо
 ROR R2 ; циклический сдвиг вправо
 ROR R1 ; циклический сдвиг вправо
 ROR R0 ; циклический сдвиг вправо
 BLD R3, 7 ; заполнение 7 бита значением из флага T
; Вывод 32-разрядного числа R0-R3 на порты PORTA-PORTD
 OUT PORTA, R0
 OUT PORTB, R1
 OUT PORTC, R2
 OUT PORTD, R3
; Пауза
 CALL delay;
; Возврат в начало основного цикла
 RJMP loop ;
